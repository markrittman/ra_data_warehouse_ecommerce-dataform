config {
  type: "table"
}

${ when(var('ecommerce_warehouse_order_lines_sources'), `


with t_orders_merge_list as
  (
    ${ var('ecommerce_warehouse_order_lines_sources').map(source => `

      ${ set('relation_source', 'stg_' + source + '_order_lines') } 

      select
        '${ source }' as source,
        *
        from ${ ref(relation_source) }

        ${ when(not(loop.last), `union all`) }
      
`).join('') }
  ),
  orders as (
    select
      *
    from
      ${ ref('int_orders') }
  )
select l.*,
    		nvl(price,0) * nvl(quantity,0) as gross_revenue,
    		(nvl(price,0)*nvl(quantity,0))-(nvl(tax_amount,0)) as gross_revenue_excl_tax,
    		(nvl(price,0)*nvl(quantity,0))-(nvl(total_discount,0)) as net_revenue,
    		(nvl(price,0)*nvl(quantity,0))-(nvl(tax_amount,0))-(nvl(total_discount,0)) as net_revenue_excl_tax,
        DATE_DIFF('month', o.created_timestamp, MIN(o.created_timestamp) over (PARTITION BY l.product_id))
   AS months_since_first_product_order,
      DATE_DIFF('week', o.created_timestamp, MIN(o.created_timestamp) over (PARTITION BY l.product_id))
   AS weeks_since_first_product_order
from t_orders_merge_list l
join orders o
on   l.order_id = o.order_id

`) }${ otherwise(`
`) }